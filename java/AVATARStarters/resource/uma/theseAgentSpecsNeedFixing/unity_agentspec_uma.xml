<AsapVirtualHuman id="UMA">
  <Loader id="realizer" loader="asap.realizerembodiments.AsapRealizerEmbodiment">
    <BMLParser>
      <BMLAttributeExtension class="asap.bml.ext.bmla.BMLABMLBehaviorAttributes"/>      
    </BMLParser>
	
    <BMLScheduler>
      <SchedulingHandler class="asap.realizer.scheduler.BMLASchedulingHandler" schedulingStrategy="asap.realizer.scheduler.SortedSmartBodySchedulingStrategy"/>
    </BMLScheduler>
    <PipeLoader id="visualizerpipe" loader="asap.bmlflowvisualizer.loader.AsapBMLFlowVisualizerPortLoader"/>
     <PipeLoader id="pipe" loader="asap.middlewareadapters.loader.MiddlewareToBMLRealizerAdapterLoader">
		  <MiddlewareOptions loaderclass="nl.utwente.hmi.middleware.stomp.STOMPMiddlewareLoader">
		    <MiddlewareProperty name="apolloIP" value="127.0.0.1"/>
		    <MiddlewareProperty name="apolloPort" value="61613"/>
            <MiddlewareProperty name="iTopic" value="/topic/bmlRequests"/>
            <MiddlewareProperty name="oTopic" value="/topic/bmlFeedback"/>
          </MiddlewareOptions>
	  </PipeLoader>
    
  </Loader>
  
  <Loader id="guiembodiment" loader="asap.realizerembodiments.JFrameEmbodiment">
    <BmlUI demoscriptresources="unitybmlexamples"/>
    <FeedbackUI/>    
    <!--KillButton/-->
  </Loader>
  
  <Loader id="eyelidmorpher" loader="hmi.faceembodiments.loader.EyelidMorpherLoader">
    <Morphs ids="FACS_AU_45" weight="1.0" />
  </Loader>
  
  <Loader id="unityembodiment" loader="hmi.unityembodiments.UnityEmbodimentLoader">
    <MiddlewareOptions loaderclass="nl.utwente.hmi.middleware.stomp.STOMPMiddlewareLoader">
      <MiddlewareProperty name="apolloIP" value="127.0.0.1"/>
      <MiddlewareProperty name="apolloPort" value="61613"/>
      <MiddlewareProperty name="iTopic" value="/topic/UnityAgentFeedback"/>
      <MiddlewareProperty name="oTopic" value="/topic/UnityAgentControl"/>
    </MiddlewareOptions>
  </Loader>
  
  <!-- since we will be using physics and a mixedanimationengine, we need to transform the skeletonembodiment into a mixedskeletonembodiment -->
  <Loader id="mixedskeletonembodiment" loader="hmi.physicsenvironment.MixedSkeletonEmbodimentLoader" requiredloaders="unityembodiment"/>
  
  <!-- load the physicalembodiments and connect them to the mixedskeletonembodiment -->
  <Loader id="physicalembodiment" 
              loader="hmi.physicsenvironment.OdePhysicalEmbodiment"
              requiredloaders="mixedskeletonembodiment">
    <MixedSystems> 
      <MixedSystem name="lowerbody"            
                   resources="Humanoids/armandia/mixedsystems/" 
                   filename="armandialowerbody.xml"/>
      <MixedSystem name="lowerbodyandleftarm"  
                   resources="Humanoids/armandia/mixedsystems/" 
                   filename="armandialowerbodyandleftarm.xml"/>
      <MixedSystem name="lowerbodyandrightarm" 
                   resources="Humanoids/armandia/mixedsystems/" 
                   filename="armandialowerbodyandrightarm.xml"/>
      <MixedSystem name="lowerbodyandarms"     
                   resources="Humanoids/armandia/mixedsystems/" 
                   filename="armandialowerbodyarms.xml"/>
    </MixedSystems>
    <GlueFeetToFloor/>
  </Loader>

<!--
  <Loader id="physicsdebug" loader="hmi.debug.PhysicsDebugVisualisationLoader" requiredloaders="physicalembodiment">
    <Placement offset="0.5 0 -0.5"/>
  </Loader>
-->

  <Loader id="animationengine" 
          loader="asap.animationengine.loader.MixedAnimationEngineLoader"
          requiredloaders="mixedskeletonembodiment,physicalembodiment">
		  
    <GestureBinding basedir="" resources="" filename="unity_gesturebinding.xml"/>
  
    <StartPose>
      <RestPose type="SkeletonPose" file="unity_restpose_uma.xml"/>
    </StartPose>
	
	<Hns resources="Humanoids/armandia/hns" filename="hns_armandia.xml"/>
    <HnsHandShape dir="Humanoids/shared/handshapes"/>
  </Loader>
  
  <Loader id="faceengine" 
          loader="asap.faceengine.loader.FaceEngineLoader"
          requiredloaders="unityembodiment">
    <FaceBinding basedir="" resources=""  filename="unity_facebinding.xml" facs2morphmappingresources="" facs2morphmappingfilename="unity_facs2morphmapping.xml"/>
  </Loader>
  
  <Loader id="facelipsync" requiredloaders="faceengine" loader="asap.faceengine.loader.TimedFaceUnitLipSynchProviderLoader">
	<MorphVisemeBinding filename="unity_visemebinding.xml"/>
  </Loader>

  <!--
  <Loader id="visualprosody" loader="asap.animationengine.loader.HeadVisualProsodyProviderLoader" requiredloaders="animationengine">
	<?include resources="" file="visualprosodyprovider.xml"?>
  </Loader>
-->


  <Loader id="ttsbinding" loader="asap.marytts5binding.loader.MaryTTSBindingLoader">
    <PhonemeToVisemeMapping resources="Humanoids/shared/phoneme2viseme/" filename="sampade2ikp.xml"/>
  </Loader>
  
  
<!-- visualprosody, -->
 <Loader id="speechengine" loader="asap.speechengine.loader.SpeechEngineLoader" requiredloaders="facelipsync,ttsbinding,guiembodiment">
   <Voice factory="WAV_TTS" voicename="dfki-prudence-hsmm" />
   <SpeechUI/>
  </Loader>

  <!-- Breathingemitter that sens small breathing animations every now and then -->
  <Loader id="breathingengine" 
          loader="asap.emitterengine.loader.EmitterEngineLoader">
    <EmitterInfo class="asap.breathingemitter.BreathingEmitterInfo"/>
  </Loader>

  <!-- Blinkemitter that sens small blink animations every now and then -->
  <Loader id="blinkengine" 
          loader="asap.emitterengine.loader.EmitterEngineLoader">
    <EmitterInfo class="asap.blinkemitter.BlinkEmitterInfo"/>
  </Loader>
  
  <!-- Engine for playing audio files, nice for sound effects (e.g., clapping) or for prerecorded speech fragments -->
  <Loader id="audioengine" loader="asap.audioengine.loader.AudioEngineLoader"/>

  
</AsapVirtualHuman>
